{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/state/state.component.css","webpack:///./src/app/components/state/state.component.html","webpack:///./src/app/components/state/state.component.ts","webpack:///./src/app/country.service.ts","webpack:///./src/app/district.service.ts","webpack:///./src/app/issue.service.ts","webpack:///./src/app/state.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,iO;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEzC,kEAAkE;AACX;AACA;AACF;AACyK;AAC/K;AACgC;AACd;AACM;AACN;AAGlB;AAEqB;AACrB;AACK;AACC;AACrD,IAAM,MAAM,GAAY;IAEtB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,oFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAa,EAAE;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;CAEnD,CAAC;AAyBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAa;gBACb,oFAAe;gBACf,8EAAa;gBACb,iFAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,mCAAmC;gBACnC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,kEAAmB;gBACnB,4FAAuB;gBACvB,kEAAgB,EAAC,oEAAkB,EAAE,gEAAc,EAAE,iEAAe,EAAE,iEAAe,EAAE,+DAAa,EAAC,iEAAe,EAAE,+DAAa,EAAE,gEAAc,EAAE,kEAAgB,EAAE,mEAAiB;gBACxL,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,4DAAY,EAAC,4DAAY,EAAC,iEAAe,EAAC,kEAAe,CAAC;YACtE,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtDtB,+DAA+D,2J;;;;;;;;;;;ACA/D,g4CAAg4C,iBAAiB,oSAAoS,mBAAmB,ub;;;;;;;;;;;;;;;;;;;;;;ACAtpD;AACkB;AAC3B;AAGU;AACF;AACQ;AAQzD;IAME,yBAAoB,YAA0B,EAAS,YAA0B,EAAS,eAAiC,EAAU,EAAc,EAAU,MAAc;QAAvJ,iBAAY,GAAZ,YAAY,CAAc;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,oBAAe,GAAf,eAAe,CAAkB;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEzK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,WAAW,EAAE,EAAE;YACf,WAAW,EAAC,EAAE;YACd,QAAQ,EAAC,EAAE;YACX,OAAO,EAAC,EAAE;YACV,MAAM,EAAC,EAAE;SACV,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY;aAChB,QAAQ,EAAE;aACV,SAAS,CAAC,UAAC,IAAY;YACtB,KAAI,CAAC,MAAM,GAAC,IAAI,CAAC;YAClB,oCAAoC;YACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAa,GAAb;QAAA,iBAQC;QAPA,IAAI,CAAC,eAAe;aACnB,WAAW,EAAE;aACZ,SAAS,CAAC,UAAC,IAAe;YAC1B,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;YAErB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAgB,GAAhB,UAAiB,OAAe;QAAhC,iBAQE;QAPA,IAAI,CAAC,eAAe;aACnB,gBAAgB,CAAC,OAAO,CAAC;aACzB,SAAS,CAAC,UAAC,IAAe;YAC3B,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;YAEnB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAIF,kCAAkC;IAClC,6BAA6B;IAE7B,GAAG;IACH,kCAAQ,GAAR,UAAS,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ;QAAlD,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC9E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,2CAAiB,GAAjB,UAAkB,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,oCAAoC;IAC1D,CAAC;IAED,kCAAQ,GAAR;QACA,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,uBAAuB;IACvB,CAAC;IAhEU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAOkC,2DAAY,EAAuB,2DAAY,EAA2B,iEAAe,EAAa,0DAAW,EAAkB,sDAAM;OANhK,eAAe,CAkE3B;IAAD,sBAAC;CAAA;AAlE2B;;;;;;;;;;;;ACf5B,8BAA8B,yBAAyB,oBAAoB,KAAK,uBAAuB,oBAAoB,KAAK,+CAA+C,uc;;;;;;;;;;;ACA/K,u+D;;;;;;;;;;;;;;;;;;;;;ACAyE;AAChB;AACW;AAErB;AACI;AAWnD;IAME,uBAAoB,YAA0B,EAAU,MAAc,EAAU,KAAqB,EAAU,QAAqB,EAAU,EAAe;QAAzI,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAAU,OAAE,GAAF,EAAE,CAAa;QAH7J,UAAK,GAAQ,EAAE,CAAC;QAKZ,IAAI,CAAC,UAAU,EAAE,CAAC;IAEtB,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,WAAW,EAAE,EAAE;YACf,WAAW,EAAC,EAAE;YACd,QAAQ,EAAC,EAAE;YACX,MAAM,EAAE,EAAE;SACX,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAEhC,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAEnD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACxD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC9D,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAE5D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACC,mCAAW,GAAX,UAAY,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAA7D,iBASC;QAPC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC;YAClG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,EAAE,IAAI,EAAE;gBACxD,QAAQ,EAAE,IAAI;aAEf,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IA/CQ,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;+EAOkC,2DAAY,EAAkB,sDAAM,EAAiB,8DAAc,EAAoB,6DAAW,EAAc,0DAAW;OANlJ,aAAa,CAiDvB;IAAD,oBAAC;CAAA;AAjDuB;;;;;;;;;;;;AChB1B,wBAAwB,oBAAoB,KAAK,sBAAsB,2BAA2B,KAAK,+CAA+C,uZ;;;;;;;;;;;ACAtJ,uYAAuY,eAAe,8LAA8L,qBAAqB,oMAAoM,kBAAkB,4MAA4M,gBAAgB,4lBAA4lB,2BAA2B,kcAAkc,iBAAiB,uMAAuM,mBAAmB,0LAA0L,gCAAgC,wGAAwG,iBAAiB,Q;;;;;;;;;;;;;;;;;;;;ACAhmF;AACT;AAIU;AACA;AAOnD;IAME,uBAAoB,YAA0B,EAAS,YAA2B,EAAU,MAAc;QAAtF,iBAAY,GAAZ,YAAY,CAAc;QAAS,iBAAY,GAAZ,YAAY,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF1G,qBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7E,0BAAqB,GAAE,CAAC,SAAS,EAAC,WAAW,CAAC,CAAC;IAC+D,CAAC;IAE/G,gCAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB;;;;cAIM;IACR,CAAC;IACD,mCAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY;aAChB,QAAQ,EAAE;aACV,SAAS,CAAC,UAAC,IAAY;YACtB,KAAI,CAAC,MAAM,GAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mCAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY;aAChB,SAAS,EAAE;aACX,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAS,GAAT,UAAU,EAAE;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAS,EAAI,CAAC,CAAC,CAAC;IAExC,CAAC;IAED,mCAAW,GAAX,UAAY,EAAE;QAAd,iBAOC;QALC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAE1C,KAAI,CAAC,WAAW,EAAE,CAAC;QAErB,CAAC,CAAC,CAAC;IACL,CAAC;IAjDU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;+EAOkC,2DAAY,EAAwB,2DAAY,EAAkB,sDAAM;OAN/F,aAAa,CAkDzB;IAAD,oBAAC;CAAA;AAlDyB;;;;;;;;;;;;ACb1B,+DAA+D,uJ;;;;;;;;;;;ACA/D,m9B;;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AACjB;AACV;AAOzC;IAEE,wBAAoB,YAA0B,EAAS,EAAc,EAAU,MAAc;QAAzE,iBAAY,GAAZ,YAAY,CAAc;QAAS,OAAE,GAAF,EAAE,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC7F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR,UAAS,OAAO,EAAC,SAAS;QAA1B,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC;YACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACC,iCAAQ,GAAR;IACA,CAAC;IAfU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,8GAAqC;;SAEtC,CAAC;+EAGkC,2DAAY,EAAY,0DAAW,EAAkB,sDAAM;OAFlF,cAAc,CAiB1B;IAAD,qBAAC;CAAA;AAjB0B;;;;;;;;;;;;;;;;;;;ACVgB;AACO;AAKlD;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,QAAG,GAAE,uBAAuB,CAAC;IAG7B,CAAC;IACD,sCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,eAAY,CAAC,CAAC;IAChD,CAAC;IAPU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,eAAe,CAS3B;IAAD,sBAAC;CAAA;AAT2B;;;;;;;;;;;;;;;;;;;ACNe;AACO;AAKlD;IAIE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,QAAG,GAAE,uBAAuB,CAAC;IAG5B,CAAC;IAED,qCAAW,GAAX;QACA,4DAA4D;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,eAAY,CAAC,CAAC;IAChD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,OAAc;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,mBAAc,OAAS,CAAC,CAAC;IAE3D,CAAC;IAhBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU;OAJzB,eAAe,CAiB3B;IAAD,sBAAC;CAAA;AAjB2B;;;;;;;;;;;;;;;;;;;ACNe;AACO;AAClD,4BAA4B;AAK5B;IAGE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,QAAG,GAAE,uBAAuB,CAAC;IAG5B,CAAC;IAED,gCAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,YAAS,CAAC,CAAC;IAC7C,CAAC;IAGD,mCAAY,GAAZ,UAAa,EAAE;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IAClD,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ;QAChD,IAAM,KAAK,GAAG;YACZ,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAa,EAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAKD,kCAAW,GAAX,UAAY,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAChE,IAAM,KAAK,GAAG;YAEZ,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,EAAC,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,CAAC,CAAC;IAE5D,CAAC;IA/CU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,YAAY,CAgDxB;IAAD,mBAAC;CAAA;AAhDwB;;;;;;;;;;;;;;;;;;;ACPkB;AACO;AAMlD;IAIE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,QAAG,GAAE,uBAAuB,CAAC;IAK5B,CAAC;IAED,mCAAY,GAAZ;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,eAAY,CAAC,CAAC;IAChD,CAAC;IAED,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,YAAS,CAAC,CAAC;IAC7C,CAAC;IAGD,+BAAQ,GAAR,UAAS,OAAO,EAAC,SAAS;QACxB,IAAM,KAAK,GAAG;YACZ,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;SACrB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAa,EAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAvBS,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU;OAJzB,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;ACPzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar>\\n<span>Angular 6 -Mean Stack Application</span>\\n\\n</mat-toolbar>\\n\\n\\n<div>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//import { AppRoutingModule, Routes } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule} from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule , MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule,MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule} from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\n\n\nimport { IssueService } from './issue.service';\n\nimport { StateComponent } from './components/state/state.component';\nimport { StateService } from './state.service';\nimport { CountrieService } from './country.service';\nimport { DistrictService } from './district.service';\nconst routes : Routes = [\n\n  { path: 'create', component: CreateComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'state', component: StateComponent },\n  { path: '', redirectTo: 'list', pathMatch: 'full'}\n\n];\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent,\n    StateComponent\n  ],\n  imports: [\n    BrowserModule,\n    //AppRoutingModule.forRoot(routes),\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule,MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule,\n    HttpClientModule\n  ],\n  providers: [IssueService,StateService,CountrieService,DistrictService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <br>\\n\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Create a new issue</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Issue Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Responsible\\\" formControlName=\\\"responsible\\\" #responsible>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description>\\n          </textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n         <mat-option value=\\\"Low\\\">Low</mat-option> \\n         <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n         <mat-option value=\\\"High\\\">High</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n  \\n    <mat-select placeholder=\\\"State\\\" formControlName=\\\"stateid\\\" (ngModelChange)='onChangeStatenew($event)' >\\n         <mat-option class='mat-option' *ngFor='let state of states' [value]=\\\"state.stateid\\\">{{state.statename}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <mat-select placeholder=\\\"District\\\" formControlName=\\\"distId\\\" >\\n         <mat-option class='mat-option' *ngFor='let district of districts' [value]=\\\"district.id\\\">{{district.distName}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      \\n      <br><br>\\n      <button mat-raised-button color=\\\"ascent\\\" routerLink=\\\"/list\\\">Back</button>\\n       <button type=\\\"submit\\\" (click)=\\\"addIssue(title.value, responsible.value, description.value, severity.value)\\\"[disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n\\n    </form>\\n  </mat-card>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {State} from '../../state.model';\nimport {District} from '../../district.model';\nimport { IssueService } from '../../issue.service';\nimport {StateService} from '../../state.service';\nimport { DistrictService } from '../../district.service';\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\nstates:State[];\ndistrict: District[];\nstateid : number;\noptionSelected: any;\n  createForm: FormGroup;\n  constructor(private issueService: IssueService,private stateService: StateService,private districtService : DistrictService, private fb:FormBuilder, private router: Router) { \n\n    this.createForm = this.fb.group({\n      title: ['', Validators.required],\n      responsible: '',\n      description:'',\n      severity:'',\n      stateid:'',\n      distId:''\n    });\n  }\n \n  fetchStates(){\n    this.stateService\n    .getState()\n    .subscribe((data:State[])=>{\n      this.states=data;\n     // console.log('data requested!!!');\n      console.log(this.states);\n    });\n  }\n  onChangeState(){\n   this.districtService\n   .getDistrict()\n    .subscribe((data:District[])=>{\n     this.district=data;\n     \n   console.log(this.district);\n    });\n  }\n  onChangeStatenew(stateId: number){\n    this.districtService\n    .getDistrictsfill(stateId)\n    .subscribe((data:District[])=>{\n    this.district=data;\n      \n    console.log(this.district);\n     });\n   }\n  \n\n\n  //onChangeState(stateId: number) {\n  //  console.log(this.states);\n    \n  //}\n  addIssue(title, responsible, description, severity){\n    this.issueService.addIssue(title, responsible, description, severity).subscribe(() =>{\n      this.router.navigate(['/list']);\n    });\n  }\n  onOptionsSelected(event){\n    console.log(event); //option value will be sent as event\n  }\n\n  ngOnInit() {\n  this.fetchStates();\n  //this.onChangeState();\n  }\n\n}\n","module.exports = \".edit-form {\\r\\n    min-width: 150px;\\r\\n    width: 100%;\\r\\n}\\r\\n.field-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixZQUFZO0NBQ2Y7QUFDRDtJQUNJLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4uZmllbGQtZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<div>\\n    <br>\\n  \\n    <mat-card>\\n      <section class=\\\"mat-typography\\\">\\n        <h3>Update Issue</h3>\\n      </section>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput placeholder=\\\"Issue Title\\\" formControlName=\\\"title\\\" #title>\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput placeholder=\\\"Responsible\\\" formControlName=\\\"responsible\\\" #responsible>\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description>\\n            </textarea>\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n           <mat-option value=\\\"Low\\\">Low</mat-option> \\n           <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n           <mat-option value=\\\"High\\\">High</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n  \\n        <mat-form-field class=\\\"field-full-width\\\">\\n            <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" #status>\\n             <mat-option value=\\\"Open\\\">Open</mat-option> \\n             <mat-option value=\\\"In  Progress\\\">In Progress</mat-option>\\n             <mat-option value=\\\"Done\\\">Done</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        <!--  <mat-divide></mat-divide>-->\\n        <br><br>\\n        <button mat-raised-button color=\\\"ascent\\\" routerLink=\\\"/list\\\">Back</button>\\n         <button type=\\\"submit\\\" (click)=\\\"updateIssue(title.value, responsible.value, description.value, severity.value, status.value)\\\"[disabled]=\\\"updateForm.pristine || updateForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n  \\n      </form>\\n    </mat-card>\\n  </div>\"","import { Component, OnInit, createPlatformFactory } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatSnackBar} from '@angular/material';\nimport { IssueService } from '../../issue.service';\n\nimport { Issue } from '../../issue.model';\n//import { FormGroup } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  id: String;\n  issue: any = {};\n  updateForm: FormGroup;\n\n  constructor(private issueService: IssueService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) { \n\n      this.createForm();\n\n  }\n\n  createForm(){\n    this.updateForm = this.fb.group({\n      title: ['', Validators.required],\n      responsible: '',\n      description:'',\n      severity:'',\n      status: ''\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n\n      this.id = params.id;\n      this.issueService.getIssueById(this.id).subscribe(res => {\n\n        this.issue = res;\n        this.updateForm.get('title').setValue(this.issue.title);\n        this.updateForm.get('responsible').setValue(this.issue.responsible);\n        this.updateForm.get('description').setValue(this.issue.description);\n        this.updateForm.get('severity').setValue(this.issue.severity);\n        this.updateForm.get('status').setValue(this.issue.status);\n\n      });\n    });\n  } \n    updateIssue(title, responsible, description, severity, status){\n\n      this.issueService.updateIssue(this.id, title, responsible, description, severity, status).subscribe(() => {\n        this.snackBar.open('Issue updated successfully!!!', 'OK', {\n          duration: 3000\n\n        });\n\n      });\n    }\n\n  }\n","module.exports = \"table{\\r\\n    width: 100%;\\r\\n}\\r\\n.mat-column-right{\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7Q0FDZjtBQUNEO0lBQ0ksbUJBQW1CO0NBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm1hdC1jb2x1bW4tcmlnaHR7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\"","module.exports = \"<div>\\n<br>\\n<mat-card>\\n  <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New issue</button>\\n  <br><br>\\n  <!--     <mat-divide>\\n\\n  </mat-divide> -->\\n<br>\\n<table mat-table [dataSource]=\\\"issues\\\">\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <th mat-header-cell *matHeaderCellDef>Title</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"responsible\\\">\\n      <th mat-header-cell *matHeaderCellDef>Responsible</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.responsible}} </td>\\n  \\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"severity\\\">\\n        <th mat-header-cell *matHeaderCellDef>Severity</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.severity}} </td>\\n    \\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"status\\\">\\n          <th mat-header-cell *matHeaderCellDef>Status</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Status}} </td>\\n      \\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"  class=\\\"mat-column-right\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"editIssue(element._id)\\\">Edit</button>  \\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteIssue(element._id)\\\">Delete</button>  \\n\\n        </td>\\n    </ng-container>\\n    \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n</table>\\n\\n</mat-card>\\n\\n</div>\\n\\n<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/state\\\">Create New issue</button>\\n    <br><br>\\n    <!--     <mat-divide>\\n  \\n    </mat-divide> -->\\n  <br>\\n  <table mat-table [dataSource]=\\\"states\\\">\\n    <ng-container matColumnDef=\\\"stateid\\\">\\n      <th mat-header-cell *matHeaderCellDef>State Id</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.stateid}} </td>\\n  \\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"statename\\\">\\n        <th mat-header-cell *matHeaderCellDef>State Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.statename}} </td>\\n    \\n      </ng-container>\\n    \\n      \\n      \\n   \\n      \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsstate\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsstate;\\\"></tr>\\n  \\n  </table>\\n  \\n  </mat-card>\\n  \\n  </div>\\n \\n     <li *ngFor=\\\"let state of states\\\">{{state.statename}}</li>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\nimport { Issue } from '../../issue.model';\nimport { State } from '../../state.model';\nimport { IssueService } from '../../issue.service';\nimport { StateService } from '../../state.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  issues: Issue[];\n  states: State[];\n  displayedColumns = ['title', 'responsible', 'severity', 'status', 'actions']; \n  displayedColumnsstate =['stateid','statename'];\n  constructor(private issueService: IssueService,private stateService : StateService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.fetchIssues();\n    this.fetchStates();\n    /*this.issueService.getIssues().subscribe((issues) => {\n\n      console.log(issues);\n\n    }); */\n  }\n  fetchStates(){\n    this.stateService\n    .getState()\n    .subscribe((data:State[])=>{\n      this.states=data;\n      console.log('data requested!!!');\n      console.log(this.states);\n    });\n  }\n  fetchIssues(){\n    this.issueService\n    .getIssues()\n    .subscribe((data : Issue[]) => {\n      this.issues = data;\n      console.log('Data Requested...');\n      console.log(this.issues);\n    });\n  }\n\n  editIssue(id){\n    this.router.navigate([`/edit/${id}`]);\n    \n  }\n\n  deleteIssue(id){\n\n    this.issueService.deleteIssue(id).subscribe(() => {\n\n      this.fetchIssues();\n\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhdGUvc3RhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <br>\\n\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Create a new state</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"State Id\\\" formControlName=\\\"stateid\\\" #stateid>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"State name\\\" formControlName=\\\"statename\\\" #statename>\\n      </mat-form-field>\\n      \\n      \\n      \\n\\n      <!--  <mat-divide></mat-divide>-->\\n      <br><br>\\n      <button mat-raised-button color=\\\"ascent\\\" routerLink=\\\"/list\\\">Back</button>\\n       <button type=\\\"submit\\\" (click)=\\\"addState(stateid.value, statename.value)\\\"[disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n\\n    </form>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { StateService } from '../../state.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-state',\n  templateUrl: './state.component.html',\n  styleUrls: ['./state.component.css']\n})\nexport class StateComponent implements OnInit {\n  createForm: FormGroup;\n  constructor(private stateService: StateService,private fb:FormBuilder, private router: Router) { \n  this.createForm = this.fb.group({\n    stateid: '',\n    statename: ''\n  });\n}\n\naddState(stateid,statename){\n  this.stateService.addState(stateid, statename).subscribe(() =>{\n    this.router.navigate(['/list']);\n  });\n}\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountrieService {\n  uri ='http://localhost:4000';\n  constructor(private http: HttpClient) { \n\n  }\n  getCountries(){\n    return this.http.get(`${this.uri}/countries`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {State} from './state.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistrictService {\n  states:State[];\n \n  uri ='http://localhost:4000';\n  constructor(private http: HttpClient) {\n\n   }\n\n   getDistrict(){\n   // return this.http.get(`${this.uri}/districts/${stateid}`);\n    return this.http.get(`${this.uri}/districts`);\n  }\n\n  getDistrictsfill(stateid:number) {\n    return this.http.get(`${this.uri}/districts/${stateid}`);\n  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { stat } from 'fs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueService {\n\n  uri ='http://localhost:4000';\n  constructor(private http: HttpClient) {\n\n   }\n\n   getIssues(){\n     return this.http.get(`${this.uri}/issues`);\n   }\n \n\n   getIssueById(id){\n    return this.http.get(`${this.uri}/issues/${id}`);\n   }\n\n   addIssue(title, responsible, description, severity){\n     const issue = {\n       title: title,\n       responsible: responsible,\n       description: description,\n       severity: severity\n     };\n\n     return this.http.post(`${this.uri}/issues/add`,issue);\n   }\n\n  \n\n\n   updateIssue(id, title, responsible, description, severity, status){\n    const issue = {\n\n      title: title,\n      responsible: responsible,\n      description: description,\n      severity: severity,\n      status: status\n    };\n\n    return this.http.post(`${this.uri}/issues/update/${id}`,issue);\n  }\n\n  deleteIssue(id){\n\n      return this.http.get(`${this.uri}/issues/delete/${id}`);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {State} from './state.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  uri ='http://localhost:4000';\n stateid: number;\n  states:State[];\n  constructor(private http: HttpClient) {\n    \n   }\n   \n   getCountries(){\n    return this.http.get(`${this.uri}/countries`);\n  }\n  \n  getState(){\n    return this.http.get(`${this.uri}/states`);\n  }\n  \n\n  addState(stateid,statename){\n    const state = {\n      stateid: stateid,\n      statename: statename\n    };\n    return this.http.post(`${this.uri}/states/add`,state);\n   }\n\n    \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}